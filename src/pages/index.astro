---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import { init as serverInit } from '@launchdarkly/node-server-sdk';

// üëÄ‚û°Ô∏è No LD Connection 
// 
// const isDisconnected = true;
// const serverFlagValue = false;
// const isLocalDevServer = false;
// ‚¨ÖÔ∏è end no LD connection

// Define the user first
const user = {
  key: 'user-key-123',
  name: 'DJ Toggle',
  email: 'DJToggle@launchdarkly.com'
};

// üëÄ‚û°Ô∏è LD Application Server-side SDK initialization
// Comment the below out if you are looking to use the LD local-server
const serverClient = serverInit(import.meta.env.LD_SDK_KEY);
console.log('Waiting for server client initialization...');
await serverClient.waitForInitialization({timeout: 5});
console.log('Server client initialized successfully');
// ‚¨ÖÔ∏è end LD Application server-side SDK changes

// üëÄ‚û°Ô∏è LD local-server CLI server-side SDK initalization
// ‚ÑπÔ∏è NOTE: you cannot run both serverClient and localServerClient at the same time
// LD local-server CLI server-side SDK initalization
// console.log('Initializing LaunchDarkly server-side SDK with local dev server');
// const serverClient = serverInit('local-dev-demo', {
//   baseUri: 'http://localhost:8765',
//   streamUri: 'http://localhost:8765',
//   eventsUri: 'http://localhost:8765'
// });
// await serverClient.waitForInitialization({timeout: 5});
// console.log('Server client initialized successfully');



// üëÄ ‚û°Ô∏è Uncomment the below when you're ready to connect it to LaunchDarkly via the SDK or Local Dev Server 
const serverFlagValue = await serverClient.variation('server-side', user, false);
console.log('Server-side flag value:', serverFlagValue);
const isLocalDevServer = serverClient.sdkKey === 'local-dev-demo';
await serverClient.close();
// ‚¨ÖÔ∏è end server flag value

---

<Layout title="Making the most of the LaunchDarkly CLI">
  <main>
    <h1>Making the most of the LaunchDarkly CLI</h1>
    <!-- server-side feature-flag indicator -->
    <div class="connection-indicator">
      Server-Side Connection:
      <span class={isDisconnected ? 'disconnected' : (isLocalDevServer ? 'local' : (serverClient ? 'remote' : 'no-sdk'))}>
        {isDisconnected ? 'Disconnected' : (isLocalDevServer ? 'Local Dev Server' : (serverClient ? 'LaunchDarkly App' : 'No SDK Connected'))}
      </span>
      - Flag Status:
      <span class={isDisconnected ? 'disconnected' : (serverClient ? (serverFlagValue ? 'green' : 'red') : 'no-sdk')}>
        {isDisconnected ? 'N/A' : (serverClient ? (serverFlagValue ? 'ON' : 'OFF') : 'N/A')}
      </span>
      <br>
    </div>

    <!-- Client-side feature flag indicator -->
    <div class="flag-indicator">
      Client-side Feature Flag Status:
      <span id="clientFlagStatus" class="not-connected">Not Connected</span>
        - 
      <span id="clientConnectionType" class="not-connected">Not Connected</span>
    </div>


      <!-- Card grid -->
      <ul role="list" class="link-card-grid">
        <Card
          href="https://docs.launchdarkly.com/home/getting-started/ldcli/"
          title="LaunchDarkly CLI Docs"
          body="Reference the LaunchDarkly Documentation to get the most of our CLI"
        />
        <Card
          href="https://launchdarkly.com/pricing"
          title="Try out LaunchDarkly"
          body="Create a free developer account and start building with LaunchDarkly."
        />
        <Card
          href="https://launchdarkly.com/blog/"
          title="LaunchDarkly Blog"
          body="Explore a galaxy of content, tutorials or getting started guides on the LaunchDarkly Blog."
        />
        <Card
          href="https://launchdarkly.com/community/"
          title="Community"
          body="Thanks for being part of our universe"
        />
      </ul>
    </main>
</Layout>
 
<!--  üëÄ‚û°Ô∏è LD APP | LD client-side SDK initialization 
 comment this out if you're using the LD local-dev server -->
<script define:vars={{ clientSideId: import.meta.env.PUBLIC_LD_CLIENT_SIDE_ID }}>
  document.addEventListener('DOMContentLoaded', () => {
    console.log('Initializing LaunchDarkly client-side SDK');
    const isLocalDevServer = clientSideId === 'local-dev-demo';
    const clientClient = LDClient.initialize(clientSideId, {
      key: 'user-key-123',
      name: 'DJ Toggle',
      email: 'DJToggle@launchdarkly.com'
    }, isLocalDevServer ? {
      baseUrl: 'http://localhost:8765',
      streamUrl: 'http://localhost:8765',
      eventsUrl: 'http://localhost:8765'
    } : {});

    clientClient.on('ready', () => {
      const clientFlagValue = clientClient.variation('client-side', false);
      const clientFlagStatus = document.getElementById('clientFlagStatus');
      const clientConnectionType = document.getElementById('clientConnectionType');
      
      clientFlagStatus.textContent = clientFlagValue ? 'ON' : 'OFF';
      clientFlagStatus.className = clientFlagValue ? 'green' : 'red';
      
      clientConnectionType.textContent = isLocalDevServer ? 'Local Dev Server' : 'LaunchDarkly App';
      clientConnectionType.className = isLocalDevServer ? 'local' : 'remote';
    });
  });
</script>
<!-- ‚¨ÖÔ∏è end of LD App  client-side initialization -->

<!--  üëÄ‚û°Ô∏è ldcli local-dev server | LD client-side SDK initialization 
 comment this out if you're using the LD Application -->
 <!-- <script define:vars={{ clientSideId: 'local-dev-demo' }}>
  document.addEventListener('DOMContentLoaded', () => {
    console.log('Initializing LaunchDarkly client-side SDK');
    const clientClient = LDClient.initialize(clientSideId, {
      key: 'user-key-123',
      name: 'DJ Toggle',
      email: 'DJToggle@launchdarkly.com'
    }, {
      baseUrl: 'http://localhost:8765',
      streamUrl: 'http://localhost:8765',
      eventsUrl: 'http://localhost:8765'
    });

    clientClient.on('ready', () => {
      const clientFlagValue = clientClient.variation('client-side', false);
      const clientFlagStatus = document.getElementById('clientFlagStatus');
      const clientConnectionType = document.getElementById('clientConnectionType');
      
      clientFlagStatus.textContent = clientFlagValue ? 'ON' : 'OFF';
      clientFlagStatus.className = clientFlagValue ? 'green' : 'red';
      
      clientConnectionType.textContent = 'Local Dev Server';
      clientConnectionType.className = 'local';
    });
  });
</script> -->

<!-- ‚¨ÖÔ∏è end of local dev server client-side initialization -->

<script src="https://unpkg.com/launchdarkly-js-client-sdk@2.19.0/dist/ldclient.min.js"></script>


<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
  .flag-indicator {
    text-align: center;
    margin-bottom: 1rem;
    font-size: 1.2rem;
  }
  .green {
    color: #00ff00;
    font-weight: bold;
  }
  .red {
    color: #ff0000;
    font-weight: bold;
  }
  .loading {
    color: #ffff00;
    font-weight: bold;
  }

  .connection-indicator {
    text-align: center;
    margin-bottom: 1rem;
    font-size: 1.2rem;
  }

  .local {
    color: #00ff00;
    font-weight: bold;
  }

  .remote {
    color: #c854c6;
    font-weight: bold;
  }

  .not-connected {
    color: #ff8c00;
    font-weight: bold;
  }

  .disconnected {
    color: #ff0000;
    font-weight: bold;
  }

  .no-sdk {
    color: #808080;
    font-weight: bold;
  }
</style>

